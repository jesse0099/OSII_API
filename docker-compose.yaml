version: "3.7"

services:

#Instancias del Servicio
#Las variables de ambiente prevalecen sobre
#las variables del application.properties, 
#por lo que es seguro y recomendable pasar
#la URL del datasource como tal.
  spring_api:
    container_name: api_instance1
    image: jese69/os2_api
    ports:
      - 8081:8080
    depends_on:
      - mysql
    restart: on-failure
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/springsp?serverTimezone=UTC
      - SECURITY_JWT_TTLMILLIS=300000

  spring_api2:
    container_name: api_instance2
    image: jese69/os2_api
    ports:
      - 8083:8080
    depends_on:
      - mysql
    restart: on-failure
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/springsp?serverTimezone=UTC
      - SECURITY_JWT_TTLMILLIS=300000
      

# docker-entrypoint-initdb.d Ejecuta los scripts .sh o .sql que se le pasen
# Si se detecta que existe /var/lib/mysql, es decir, hay archivos
# en el volumen de persistencia del host, ej:container_data, los scripts
# .sql son ignorados. La solucion es tenerlo vacio, o crear un script
# de inicializacion que lo elimine y ejecute docker-compose up --force-recreate.
# Tutorial de referencia: https://stackoverflow.com/questions/38504257/mysql-scripts-in-docker-entrypoint-initdb-are-not-executed/52715521
  mysql:
    container_name: mysql_spring
    image: jese69/mysql:5.7
    ports:
      - 3307:3306
    volumes: 
      - ./container_data:/var/lib/mysql
      - ./init:/docker-entrypoint-initdb.d/:rwx
    environment:
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=springsp
    
      
